////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "FaultInsertion.hpp"									// Including the header-file is necessary
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


using namespace std;

double LastValue = 0;

double Input[] = { 1, 2, 3, 4, 5, 6, 0, 5, 0, 4, 0, 3, 0, 2, 0, 1 };
double Test[17];
double Signal = 0;
double Output[100];

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
tFIU FIU_1;														// There could also be more Fault Insertion Units
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

double GetSlope(double Signal)
{
	double Slope = Signal - LastValue;
	LastValue = Signal;
	return Slope;
}

int main(void)
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	SET_NOISE(FIU_1, ENABLED, 1, 1);							// Also other Faults could be configurated here
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	for (int ControlVariable = 0; ControlVariable < 16; ControlVariable++)
	{
		Signal = Input[ControlVariable];						// Signal gets the input values
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		Signal = InsertFaults(Signal, &FIU_1); 					// Insertion of the FIU
		Test[ControlVariable] = Signal;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		Signal = GetSlope(Signal);								// GetSlope() is our DUT ("Device under Test")
		Output[ControlVariable] = Signal;						// Modified signal will be put in output in case of any use later
	}


	return 0;
}